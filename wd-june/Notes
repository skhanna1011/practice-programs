The first parameter in the uri is specified using a "?" any subsequent parameters will bementioned using "&".
https://gender-api.com/get?name=elizabeth&key=yourkey
https -> protocol
gender-api.com -> domain name
get?name=elizabeth&key=yourkey -> uniform resource identifier
get -> controller/action
name, key -> parameters
elizabeth -> value to the parameters
The order of parameters doesn't matter.
ORM(object-relational mappin)maps Tables to classes, Table columns to object attributes, Table rows to objects.
-------------------------------------Create----------------------------------------
.new is a class method used to instantiate an object we can pass # as na argument.
.valid? is an isntance method used to check weather the object attributes pass the validations we are checking for, it's boolean meathod.
.save is a instance method used to insert a record to the database table.
.errors.full_messages is an instance method used to display the error messages on an object, it's available once we try to save the object and it fails. It returns an array of messages.
.create is a class method which instantiate, assign and save the object in the table.
---------------------------------------Read----------------------------------------
.all is a class method which returns all the rows in the table as an array of objects, if the table is empty it returns empty array.
.find is a class method takes an arguments and returns the row that matches the argument, the argument must be an id, if the id is not found it raise an exception.
.find_by is a class method which takes a hash as an arguments the key matches the colulmn name and the value matches the column value, it returns the first row as an object, if the record is not found, it doesn't raise an exception but returns nil.
.where is a class method used to find records based on a condition, it returns an array of the object if the query matches else it returns an empty array.
eg:- Find all products whose category id is 1
products = Product.where('category_id = ?', 1)
Find all the products whose category id is 1 and price is less the 500
products = Product.where('category_id = ? AND price < ?', 1, 500)
Find all the products whose price is greater than or equal to 750
prodcuts = Product.where('price >= ?', 750)
Find all the products whose price is in-btwn 250 & 500
products = Product.where('price >= ? AND price <= ?', 250, 500)
Product.where('price BETWEEN ? AND ? ', 250,500)
Find all the products whose price is in-btwn 250 & 500 and belongs to category_id 1
Product.where('category_id = ? AND price BETWEEN ? AND ? ', 1, 250,500)